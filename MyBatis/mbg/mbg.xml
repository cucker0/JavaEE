<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 连接数据库信息
     targetRuntime: 运行时目标，使用哪种方案生成
        可选值：
        MyBatis3DynamicSql: 默认值，跟java 12结合使用还有点小问题
            要求：MyBatis versions >= 3.4.2, Java >= 8
            支持MyBatis Dynamic SQL
        MyBatis3Kotlin:
        MyBatis3: 要求MyBatis versions >= 3.0, JSE >= 5.0
            生成by example
        MyBatis3Simple: 只生成基本的CRUD，没有by example
        MyBatis3DynamicSqlV1:

     -->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/mybatis?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8&amp;useSSL=false"
                        userId="root"
                        password="py123456">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- javaModelGenerator: JavaBean的生成策略
         targetPackage="": JavaBean类生成要生成到的目标包名
         targetProject="": 工程路径
         -->
        <javaModelGenerator targetPackage="com.java.bean" targetProject="./src">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- sqlMapGenerator：sql映射生成策略 -->
        <sqlMapGenerator targetPackage="com.java.dao" targetProject="./conf">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- javaClientGenerator: 指定mapper接口所在的位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.java.dao" targetProject="./src">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- table: 指定需要逆向分析的表，根据表创建JavaBean
         tableName="": 表名
         domainObjectName: 要生成的JavaBean类名
         -->
        <table tableName="t_employee_x" domainObjectName="Employee"></table>
        <table tableName="t_department" domainObjectName="Department"></table>

    </context>
</generatorConfiguration>