<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring配置 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!-- 整合目标：由Spring管理所有的业务逻辑组件 -->

    <!-- 扫描包的范围 -->
    <context:component-scan base-package="com.java.mp">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 引入数据数据库的配置 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 数据源，JDBC连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${mysql.driver}"/>
        <property name="jdbcUrl" value="${mysql.url}"/>
        <property name="user" value="${mysql.user}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>

    <!-- 事务管理器 -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启基于注解的事务管理 -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

    <!-- 整合mybatis
        目的：
        1. Spring管理所有的组件
            自动注入mapper
        2. Spring来管理事务
            使用spring声明式事务
    -->

    <!-- 定义dbConfig -->
    <bean id="dbConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig">
        <!-- 全局的主键策略
         AUTO(0, "数据库ID自增"),
         INPUT(1, "用户输入ID"),
         ID_WORKER(2, "全局唯一ID"),
         UUID(3, "全局唯一ID"),
         NONE(4, "该类型为未设置主键类型"),
         ID_WORKER_STR(5, "字符串全局唯一ID");
         -->
        <property name="idType" value="AUTO"></property>
        <!-- 全局的表前缀策略配置 -->
        <property name="tablePrefix" value="tbl_"></property>
    </bean>
    <!-- 定义MybatisPlus的全局策略配置-->
    <bean id ="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig">
        <property name="dbConfig" ref="dbConfig"></property>
    </bean>
    <!-- 创建SqlSessionFactory实例对象
     mybatis提供的:org.mybatis.spring.SqlSessionFactoryBean
     mybatis plus 3提供的：com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean
     使用mybatis-plus，只需要将 sqlSessionFactory 对应的class替换为 mybatis plus 就可以了
     -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- configLocation: 指定MyBatis全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 别名处理 -->
        <property name="typeAliasesPackage" value="com.java.mp.bean"></property>
        <!-- 注入MybatisPlus的全局策略配置 -->
        <property name="globalConfig" ref="globalConfig"></property>
    </bean>

    <!-- 配置一个可以批量执行的SqlSession
     批量执行的executor执行update、insert语句的受影响的行数将丢失，返回结果固定为：-2147482646
     If the BATCH executor is in use, the update counts are being lost.
     -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
<!--        <constructor-arg name="executorType" value="BATCH"/>-->
    </bean>

    <!-- 扫描所有mapper接口的实现
     让mapper可以自动注入
     -->
    <mybatis-spring:scan base-package="com.java.mp.mapper"/>
    <!-- 扫描所有mapper接口的实现，另外一种配置方法 -->
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="basePackage" value="com.java.dao"/>-->
<!--    </bean>-->
</beans>